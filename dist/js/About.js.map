{"version":3,"file":"About.js","sources":["../../node_modules/react-redux/es/hooks/useStore.js","../../node_modules/react-redux/es/hooks/useDispatch.js","../../src/views/components/ContentComponent.jsx","../../src/views/About.jsx"],"sourcesContent":["import { ReactReduxContext } from '../components/Context';\nimport { useReduxContext as useDefaultReduxContext, createReduxContextHook } from './useReduxContext';\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\n\nexport function createStoreHook(context = ReactReduxContext) {\n  const useReduxContext = // @ts-ignore\n  context === ReactReduxContext ? useDefaultReduxContext : // @ts-ignore\n  createReduxContextHook(context);\n  return function useStore() {\n    const {\n      store\n    } = useReduxContext(); // @ts-ignore\n\n    return store;\n  };\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport const useStore = /*#__PURE__*/createStoreHook();","import { ReactReduxContext } from '../components/Context';\nimport { useStore as useDefaultStore, createStoreHook } from './useStore';\n/**\r\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useDispatch` hook bound to the specified context.\r\n */\n\nexport function createDispatchHook(context = ReactReduxContext) {\n  const useStore = // @ts-ignore\n  context === ReactReduxContext ? useDefaultStore : createStoreHook(context);\n  return function useDispatch() {\n    const store = useStore(); // @ts-ignore\n\n    return store.dispatch;\n  };\n}\n/**\r\n * A hook to access the redux `dispatch` function.\r\n *\r\n * @returns {any|function} redux store's `dispatch` function\r\n *\r\n * @example\r\n *\r\n * import React, { useCallback } from 'react'\r\n * import { useDispatch } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const dispatch = useDispatch()\r\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\r\n *   return (\r\n *     <div>\r\n *       <span>{value}</span>\r\n *       <button onClick={increaseCounter}>Increase counter</button>\r\n *     </div>\r\n *   )\r\n * }\r\n */\n\nexport const useDispatch = /*#__PURE__*/createDispatchHook();","import React from 'react';\n\nfunction ContentComponent(props) {\n  const { content } = props;\n\n  return (\n    <>\n      {content\n        ? content.map((paragraph, index) => (\n            <div\n              key={index}\n              className=\"card\"\n              dangerouslySetInnerHTML={{ __html: paragraph }}></div>\n          ))\n        : null}\n    </>\n  );\n}\n\nexport default ContentComponent;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ContentComponent from '../views/components/ContentComponent';\n\nimport { getMissionStatement } from '../controllers/aboutSlice';\nimport { getContent } from '../controllers/contentSlice';\n\nfunction About() {\n  const dispatch = useDispatch();\n\n  const { missionStatement } = useSelector((state) => state.about);\n  const { content } = useSelector((state) => state.content);\n\n  useEffect(() => {\n    dispatch(getMissionStatement());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getContent('about'));\n  }, [dispatch]);\n\n  return (\n    <>\n      <h2>ABOUT</h2>\n\n      <div className=\"mission-statement-card card\">\n        <h3 className=\"mission-statement\">\n          <q>{missionStatement}</q>\n        </h3>\n      </div>\n\n      <ContentComponent content={content} />\n    </>\n  );\n}\n\nexport default About;\n"],"names":["createStoreHook","context","arguments","length","undefined","ReactReduxContext","useReduxContext","useDefaultReduxContext","createReduxContextHook","_useReduxContext","store","useStore","createDispatchHook","useDefaultStore","dispatch","useDispatch","ContentComponent","props","content","children","map","paragraph","index","jsx","className","dangerouslySetInnerHTML","__html","About","_useSelector","useSelector","state","about","missionStatement","_useSelector2","useEffect","getMissionStatement","getContent","jsxs","Fragment"],"mappings":"gFASO,SAASA,GAA6C,CAAA,IAA7BC,EAAOC,UAAAC,OAAA,GAAAD,UAAA,CAAA,IAAAE,OAAAF,UAAA,CAAA,EAAGG,EAClCC,EACNL,IAAYI,EAAoBE,EAChCC,EAAuBP,CAAO,EAC9B,OAAO,UAAoB,CACzB,IAAAQ,EAEIH,EAAiB,EADnBI,EAAKD,EAALC,MAGF,OAAOA,EAEX,CAiBO,IAAMC,EAAwBX,EAAiB,EC5B/C,SAASY,GAAgD,CAAA,IAA7BX,EAAOC,UAAAC,OAAA,GAAAD,UAAA,CAAA,IAAAE,OAAAF,UAAA,CAAA,EAAGG,EACrCM,EACNV,IAAYI,EAAoBQ,EAAkBb,EAAgBC,CAAO,EACzE,OAAO,UAAuB,CAC5B,IAAMS,EAAQC,IAEd,OAAOD,EAAMI,SAEjB,CAuBO,IAAMC,EAA2BH,EAAoB,ECtC5D,SAASI,EAAiBC,EAAO,CACzB,IAAEC,EAAYD,EAAZC,QAER,yBAEKC,SACGD,EAAAA,EAAQE,IAAI,SAACC,EAAWC,EACtB,CAAA,OAAAC,EAAAA,IAAC,MAAA,CAECC,UAAU,OACVC,wBAAyB,CAAEC,OAAQL,CAAU,CAAA,EAFxCC,CAE2C,CACnD,CAAA,EACD,IACN,CAAA,CAEJ,CCTA,SAASK,GAAQ,CACf,IAAMb,EAAWC,IAEjBa,EAA6BC,EAAY,SAACC,EAAA,CAAA,OAAUA,EAAMC,MAAK,EAAvDC,EAAiBJ,EAAjBI,iBACRC,EAAoBJ,EAAY,SAACC,EAAA,CAAA,OAAUA,EAAMZ,QAAO,EAAhDA,EAAQe,EAARf,QAERgB,OAAAA,EAAAA,UAAU,UAAM,CACdpB,EAASqB,GAAqB,CAChC,EAAG,CAACrB,CAAQ,CAAC,EAEboB,EAAAA,UAAU,UAAM,CACLpB,EAAAsB,EAAW,OAAO,CAAC,CAC9B,EAAG,CAACtB,CAAQ,CAAC,EAITuB,EAAAA,KAAAC,EAAAA,SAAA,CAAAnB,SAAA,CAAAI,EAAA,IAAC,MAAGJ,SAAK,OAAA,CAAA,EAERI,EAAA,IAAA,MAAA,CAAIC,UAAU,8BACbL,SAACI,EAAA,IAAA,KAAA,CAAGC,UAAU,oBACZL,SAACI,EAAA,IAAA,IAAA,CAAGJ,SAAiBa,EAAA,EACvB,CACF,CAAA,EAEAT,EAAA,IAACP,GAAiBE,QAAAA,CAAkB,CAAA,CAAA,CACtC,CAAA,CAEJ","x_google_ignoreList":[0,1]}