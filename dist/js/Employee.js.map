{"version":3,"file":"Employee.js","sources":["../../src/views/Employee.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getEmployee } from '../controllers/employeeSlice.js';\n\nimport LoadingComponent from './components/LoadingComponent.jsx';\nimport MemberKnowledgeComponent from './components/MemberKnowledgeComponent.jsx';\nimport MemberComponent from './components/MemberComponent.jsx';\nimport ContentComponent from './components/ContentComponent.jsx';\n\nimport { getContent } from '../controllers/contentSlice.js';\n\nfunction Employee() {\n  const url = new URL(window.location.href);\n  const pageSlug = url.pathname;\n\n  const { employee } = useParams();\n  const dispatch = useDispatch();\nconsole.log(employee);\n  useEffect(() => {\n    dispatch(getContent(pageSlug));\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getEmployee(employee));\n  }, [dispatch]);\n\n  const {\n    employeeLoading,\n    employeeErrorMessage,\n    title,\n    avatarURL,\n    fullName,\n    bio,\n    projectTypes,\n    skills,\n    frameworks,\n    technologies,\n    resume,\n  } = useSelector((state) => state.employee);\n\n  const { content } = useSelector((state) => state.content);\n\n  if (employeeLoading) {\n    return <LoadingComponent />;\n  }\n  \n  const knowledge = [\n    ...(projectTypes || []),\n    ...(skills || []),\n    ...(frameworks || []),\n    ...(technologies || []),\n  ];\n\n  return (\n    <>\n      <main class=\"author-intro\" id=\"author_intro\">\n        <MemberComponent\n          title={title}\n          avatarURL={avatarURL}\n          fullName={fullName}\n          bio={bio}\n          resume={resume}\n        />\n\n        <ContentComponent content={content} />\n\n        <MemberKnowledgeComponent knowledge={knowledge} />\n      </main>\n    </>\n  );\n}\n\nexport default Employee;\n"],"names":["Employee","url","URL","window","location","href","pageSlug","pathname","_useParams","useParams","employee","dispatch","useDispatch","console","log","useEffect","getContent","getEmployee","_useSelector","useSelector","state","employeeLoading","employeeErrorMessage","title","avatarURL","fullName","bio","projectTypes","skills","frameworks","technologies","resume","_useSelector2","content","LoadingComponent","knowledge","concat","_toConsumableArray","children","jsxs","class","id","jsx","MemberComponent","ContentComponent","MemberKnowledgeComponent"],"mappings":"0OAaA,SAASA,GAAW,CAClB,IAAMC,EAAM,IAAIC,IAAIC,OAAOC,SAASC,IAAI,EAClCC,EAAWL,EAAIM,SAEfC,EAAeC,EAAU,EAAvBC,EAASF,EAATE,SACFC,EAAWC,IACnBC,QAAQC,IAAIJ,CAAQ,EAClBK,EAAAA,UAAU,UAAM,CACLJ,EAAAK,EAAWV,CAAQ,CAAC,CAC/B,EAAG,CAACK,CAAQ,CAAC,EAEbI,EAAAA,UAAU,UAAM,CACLJ,EAAAM,EAAYP,CAAQ,CAAC,CAChC,EAAG,CAACC,CAAQ,CAAC,EAEP,IAAAO,EAYFC,EAAY,SAACC,EAAA,CAAA,OAAUA,EAAMV,SAAQ,EAXvCW,EAAAH,EAAAG,gBACAH,EAAAI,yBACAC,EAAAL,EAAAK,MACAC,EAAAN,EAAAM,UACAC,EAAAP,EAAAO,SACAC,EAAAR,EAAAQ,IACAC,EAAAT,EAAAS,aACAC,EAAAV,EAAAU,OACAC,EAAAX,EAAAW,WACAC,EAAAZ,EAAAY,aACAC,EAAAb,EAAAa,OAGFC,EAAoBb,EAAY,SAACC,EAAA,CAAA,OAAUA,EAAMa,QAAO,EAAhDA,EAAQD,EAARC,QAER,GAAIZ,EACF,aAAQa,EAAiB,CAAA,CAAA,EAG3B,IAAMC,EAAYC,CAAAA,EAAAA,OAAAC,EACZV,GAAgB,CAAA,CAAC,EAAAU,EACjBT,GAAU,CAAA,CAAC,EAAAS,EACXR,GAAc,CAAC,CAAA,EAAAQ,EACfP,GAAgB,CAAC,CAAA,CACvB,EAEA,yBAEIQ,SAACC,EAAA,KAAA,OAAA,CAAKC,MAAM,eAAeC,GAAG,eAC5BH,SAAA,CAAAI,EAAA,IAACC,EAAA,CACCpB,MAAAA,EACAC,UAAAA,EACAC,SAAAA,EACAC,IAAAA,EACAK,OAAAA,CAAA,CACF,EAEAW,EAAA,IAACE,GAAiBX,QAAAA,CAAkB,CAAA,EAEpCS,EAAA,IAACG,GAAyBV,UAAAA,CAAsB,CAAA,CAAA,EAClD,CACF,CAAA,CAEJ"}